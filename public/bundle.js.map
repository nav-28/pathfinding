{"version":3,"file":"bundle.js","sources":["../src/edge.ts","../src/algorithms.ts","../src/grid.ts","../src/main.ts"],"sourcesContent":["\n// this enum corresponds to the class name defined in styles.css\nexport enum NodeType {\n    StartNode = 'start-node',\n    EndNode = 'end-node',\n    Wall = 'wall-node',\n    Default = 'basic-node',\n    Visited = 'visited-node',\n    Path = 'path-node'\n}\n\nexport class Node {\n    public gVal: number = 0;\n    constructor(public row: number, public col: number, public type: NodeType, public element: HTMLTableCellElement) {}\n}\n","import { Node } from './edge';\nimport { Grid } from './grid';\n\nexport interface SearchResult {\n    expandedNodes: Node[];\n    path: Node[];\n}\n\n\nexport function dijkstra(grid: Grid): SearchResult {\n    const startNode = grid.getStartNode();\n    const endNode = grid.getEndNode();\n\n    const queue: Node[] = [];\n    const visited: Set<Node> = new Set();\n    const previous: Map<Node, Node | undefined> = new Map();\n    const distance: Map<Node, number> = new Map();\n\n    distance.set(startNode, 0);\n    queue.push(startNode);\n\n    while (queue.length > 0) {\n        queue.sort((a, b) => distance.get(a)! - distance.get(b)!);\n        const currentNode = queue.shift();\n        visited.add(currentNode!);\n        if (currentNode === endNode) {\n            break;\n        }\n\n        const neighbors = grid.successors(currentNode!);\n        for (const neighbour of neighbors) {\n            const tentativeDistance = distance.get(currentNode!)! + grid.cost(neighbour.row - currentNode!.row, neighbour.col - currentNode!.col);\n            if (!visited.has(neighbour) && (distance.get(neighbour) === undefined || tentativeDistance < distance.get(neighbour)!)) {\n                distance.set(neighbour, tentativeDistance);\n                previous.set(neighbour, currentNode);\n                queue.push(neighbour);\n            }\n        }\n    }\n\n    const expandedNodes = Array.from(visited);\n\n    const path: Node[] = [];\n    let currentNode: Node | undefined = endNode;\n    while (currentNode !== undefined) {\n        path.unshift(currentNode);\n        currentNode = previous.get(currentNode);\n    }\n\n    return { expandedNodes, path };\n}\n","import { Node, NodeType } from './edge';\nimport { dijkstra } from './algorithms';\n\nexport class Grid {\n    private nodes: Node[][] = [];\n    private startNode!: number[];\n    private endNode!: number[];\n    private gridAnimated: boolean = false;\n    private visitedNodes: Node[] = [];\n    private pathNodes: Node[] = [];\n    private animatationSpeed: number = 50;\n    private draggingNode: Node | undefined;\n    private draggingType!: NodeType;\n\n    public animationRunning: boolean = false;\n\n    constructor(public rows: number, public cols: number) {\n        this.calculateSpecialNodesPosition();\n        this.handleNodeDrag = this.handleNodeDrag.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n        this.initialize(rows, cols);\n    }\n\n    calculateSpecialNodesPosition() {\n        const startNodeCol = Math.round(this.cols * 0.25);\n        const endNodeCol = Math.round(this.cols * 0.72);\n        const nodeRow = Math.round(this.rows / 2);\n        this.startNode = [nodeRow, startNodeCol];\n        this.endNode = [nodeRow, endNodeCol];\n    }\n\n    initialize(rows: number, cols: number) {\n        this.rows = rows;\n        this.cols = cols;\n        this.nodes = [];\n        // recalculate special nodes if window is smaller\n        if (this.startNode[0] > rows || this.startNode[1] > cols || this.endNode[0] > rows || this.endNode[1] > cols) {\n            this.calculateSpecialNodesPosition();\n        }\n        const container = document.getElementById('container');\n        if (!container) return;\n        const existingTable = container.querySelector('table');\n        if (existingTable) {\n            container.innerHTML = '';\n        }\n        const board = document.createElement('table');\n        const boardBody = document.createElement('tbody');\n        board.appendChild(boardBody);\n        container.appendChild(board);\n\n\n        for (let row = 0; row < this.rows; row++) {\n            this.nodes[row] = [];\n            const tableRow = document.createElement('tr');\n            tableRow.classList.add(`${row}`);\n            for (let col = 0; col < this.cols; col++) {\n                const nodeElement = document.createElement('td');\n                nodeElement.id = `${row}-${col}`;\n                nodeElement.className = NodeType.Default;\n                if (row == this.startNode[0] && col == this.startNode[1]) {\n                    nodeElement.className = NodeType.StartNode;\n                    this.nodes[row][col] = new Node(row, col, NodeType.StartNode, nodeElement);\n                    this.startNode = [row, col];\n                    tableRow.appendChild(nodeElement);\n                    nodeElement.addEventListener('mousedown', this.handleNodeDrag.bind(null, this.nodes[row][col]));\n                    continue;\n                }\n\n                if (row == this.endNode[0] && col == this.endNode[1]) {\n                    nodeElement.className = NodeType.EndNode;\n                    this.nodes[row][col] = new Node(row, col, NodeType.EndNode, nodeElement);\n                    this.endNode = [row, col];\n                    tableRow.appendChild(nodeElement);\n                    nodeElement.addEventListener('mousedown', this.handleNodeDrag.bind(null, this.nodes[row][col]));\n                    continue;\n                }\n                this.nodes[row][col] = new Node(row, col, NodeType.Default, nodeElement);\n                tableRow.appendChild(nodeElement);\n            }\n            boardBody.appendChild(tableRow);\n        }\n    }\n\n    clearNodes(): void {\n        this.visitedNodes.forEach((node) => {\n            node.element.classList.remove(NodeType.Visited);\n        });\n        this.pathNodes.forEach((node) => {\n            node.element.classList.remove(NodeType.Path);\n        });\n    }\n\n    animateNodes(): void {\n        this.clearNodes();\n        this.gridAnimated = true;\n        this.animationRunning = true;\n        const result = dijkstra(this);\n        this.visitedNodes = result.expandedNodes;\n        this.pathNodes = result.path;\n        this.visitedNodes.forEach((node, index) => {\n            setTimeout(() => {\n                node.element.classList.add(NodeType.Visited);\n            }, index * this.animatationSpeed);\n\n        })\n\n        this.pathNodes.forEach((node, index) => {\n            setTimeout(() => {\n                node.element.classList.remove(NodeType.Visited);\n                node.element.classList.add(NodeType.Path);\n                if (index == this.pathNodes.length - 1) {\n                    this.animationRunning = false;\n                }\n            }, (result.expandedNodes.length + index) * this.animatationSpeed);\n        });\n\n    }\n\n    showPath(): void {\n        this.visitedNodes.forEach((node) => {\n            node.element.classList.remove(NodeType.Visited);\n        });\n        this.pathNodes.forEach((node) => {\n            node.element.classList.remove(NodeType.Path);\n        });\n\n        const result = dijkstra(this);\n        this.visitedNodes = result.expandedNodes;\n        this.pathNodes = result.path;\n        result.expandedNodes.forEach((node) => {\n            node.element.classList.add(NodeType.Visited);\n        });\n        result.path.forEach((node) => {\n            node.element.classList.remove(NodeType.Visited);\n            node.element.classList.add(NodeType.Path);\n        });\n    }\n\n\n    handleNodeDrag(node: Node, _: MouseEvent): void {\n        if (this.animationRunning) {\n            return;\n        }\n        this.draggingNode = node;\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n    }\n\n    handleMouseMove(event: MouseEvent): void {\n        if (!this.draggingNode) return;\n\n        const newSpecialNode = document.elementFromPoint(event.clientX, event.clientY) as HTMLElement;\n        if (!newSpecialNode || !newSpecialNode.classList.contains(NodeType.Default)) return;\n\n        const [newRow, newCol] = newSpecialNode.id.split('-').map(Number);\n        const newNode = this.getNode(newRow, newCol);\n        if (!newNode || newNode.type !== NodeType.Default) return;\n\n        const previousNodeElement = this.draggingNode.element;\n        previousNodeElement.className = NodeType.Default;\n\n        this.draggingType = this.draggingNode.type;\n        if (this.draggingType === NodeType.StartNode) {\n            this.setStartNode(newRow, newCol);\n        } else if (this.draggingType === NodeType.EndNode) {\n            this.setEndNode(newRow, newCol);\n        }\n        this.draggingNode.type = NodeType.Default\n        this.draggingNode = newNode;\n        this.draggingNode.type = this.draggingType\n\n        newSpecialNode.className = this.draggingType;\n        if (this.gridAnimated) {\n            this.showPath();\n        }\n    }\n\n    handleMouseUp(): void {\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n\n        // add event listener to new special node\n        if (!this.draggingNode) return;\n        const nodeElement = document.getElementById(`${this.draggingNode.row}-${this.draggingNode.col}`)\n        if (nodeElement) {\n            nodeElement.addEventListener('mousedown', this.handleNodeDrag.bind(null, this.nodes[this.draggingNode.row][this.draggingNode.col]))\n            this.draggingNode = undefined;\n        }\n    }\n\n    cost(x: number, y: number): number {\n        if (x == 0 || y == 0) {\n            return 1;\n        }\n        return 1.5;\n    }\n\n    isValidPair(x: number, y: number): boolean {\n        if (x < 0 || y < 0) {\n            return false;\n        }\n\n        if (x >= this.rows || y >= this.cols) {\n            return false;\n        }\n\n        return true;\n    }\n\n    successors(node: Node): Node[] {\n        const children = [];\n        for (let i = -1; i < 2; i++) {\n            for (let j = -1; j < 2; j++) {\n                if (i === 0 && j === 0) {\n                    continue;\n                }\n                var x = node.row + i;\n                var y = node.col + j;\n                if (this.isValidPair(x, y)) {\n                    this.nodes[x][y].gVal = this.nodes[x][y].gVal + this.cost(i, j);\n                    children.push(this.nodes[x][y]);\n                }\n            }\n        }\n        return children;\n    }\n\n\n    getNode(row: number, col: number): Node | undefined {\n        return this.nodes[row] && this.nodes[row][col];\n    }\n\n    setStartNode(row: number, col: number) {\n        this.startNode = [row, col];\n    }\n\n    setEndNode(row: number, col: number) {\n        this.endNode = [row, col];\n    }\n    getStartNode(): Node {\n        return this.nodes[this.startNode[0]][this.startNode[1]];\n    }\n\n    getEndNode(): Node {\n        return this.nodes[this.endNode[0]][this.endNode[1]];\n    }\n\n    setAnimationSpeed(speed: number): void {\n        this.animatationSpeed = speed;\n    }\n\n}\n\n","import { Grid } from './grid';\n\n\n\nvar grid = new Grid(window.innerHeight / (25 * 2), window.innerWidth / 25);\n\n\n\n// viz button\nconst playButton = document.getElementById('viz-button') as HTMLButtonElement;\nplayButton.addEventListener('click', () => {\n  if (!grid.animationRunning) {\n    grid.animateNodes()\n  }\n});\n\n\n// speed selector\nexport function changeSpeed(speed: string): void {\n  const speedText = document.getElementById('speed-selection');\n  if (!speedText) {\n    return;\n  }\n  speedText.textContent = speed;\n  if (speed == 'Slow') {\n    grid.setAnimationSpeed(100);\n  }\n  else if (speed == 'Average') {\n    grid.setAnimationSpeed(50);\n  }\n  else if (speed == 'Fast') {\n    grid.setAnimationSpeed(20);\n  }\n\n}\n\nfunction updateGridSize(): void {\n  if (!grid.animationRunning) {\n    grid.initialize(window.innerHeight / (25 * 2), window.innerWidth / 25);\n  }\n}\n\nwindow.addEventListener('resize', updateGridSize);\n"],"names":[],"mappings":"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"}